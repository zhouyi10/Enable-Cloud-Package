<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.enableets.edu.pakage.framework.ppr.test.dao.BusinessOrderDAO">
	<sql id="select_clause">
		select
			order_id as orderId,
			business_id as businessId,
			`type`,
			origin_data as originData,
			extend_attrs as extendAttrs,
			`status`,
			retry_times as retryTimes,
			error_code as errorCode,
			error_message as errorMessage,
			`creator`,
			create_time as createTime,
			`updator`,
			update_time as updateTime
		from 
			business_order
	</sql>
	
	<sql id="where_clause">
		<where>
		<if test="orderId != null and orderId !=''" >
			order_id = #{orderId}
		</if>
		<if test="businessId != null and businessId !=''" >
			and business_id = #{businessId}
		</if>
		<if test="type != null and type !=''" >
			and `type` = #{type}
		</if>
		<if test="originData != null and originData !=''" >
			and origin_data = #{originData}
		</if>
		<if test="extendAttrs != null and extendAttrs !=''" >
			and extend_attrs = #{extendAttrs}
		</if>
		<if test="status != null and status !=''" >
			and status = #{status}
		</if>
		<if test="errorCode != null and errorCode !=''" >
			and error_code = #{errorCode}
		</if>
		<if test="errorMessage != null and errorMessage !=''" >
			and error_message = #{errorMessage}
		</if>
		<if test="creator != null and creator !=''" >
			and creator = #{creator}
		</if>
		<if test="createTime != null" >
			and create_time = #{createTime}
		</if>
		<if test="updator != null and updator !=''" >
			and updator = #{updator}
		</if>
		<if test="updateTime != null" >
			and update_time = #{updateTime}
		</if>
		</where>
	</sql>

	<select id="statistics" resultType="java.util.HashMap">
		SELECT
			COUNT(order_id) as total,
			SUM(CASE WHEN `status` = '0' then 1 ELSE 0 end) as unProcessCount,
			SUM(CASE WHEN `status` = '-1' then 1 ELSE 0 end) as failedCount,
			SUM(CASE WHEN `status` = '1' then 1 ELSE 0 end) as successCount,
			SUM(CASE WHEN `status` = '2' then 1 ELSE 0 end) as inProcessCount,
			SUM(CASE WHEN `version` = '-1' then 1 ELSE 0 end) as invalidCount,
			SUM(CASE WHEN `version` = '-1' and `status` = '-1' then 1 ELSE 0 end) as validFailedCount,
			SUM(CASE WHEN `version` = '0' and `status` = '-1' then 1 ELSE 0 end) as validSuccessCount
		FROM `business_order`
		<where>
			<if test="businessId != null and businessId !=''" >
				business_id like #{businessId}"%"
			</if>
		</where>
	</select>

	<select id="query" parameterType="java.util.HashMap" resultType="com.enableets.edu.pakage.framework.ppr.test.po.BusinessOrderPO">
		select
		order_id as orderId,
		business_id as businessId,
		origin_data as originData,
		extend_attrs as extendAttrs,
		`status`,
		version,
		retry_times as retryTimes,
		error_code as errorCode,
		error_message as errorMessage,
		`creator`,
		create_time as createTime,
		`updator`,
		update_time as updateTime
		from business_order
		<where>
			<if test="orderIds != null and orderIds.size() > 0" >
				and order_id in
				<foreach collection="orderIds" item="orderId" open="(" separator="," close=")">
					#{orderId}
				</foreach>
			</if>
			<if test="businessId != null and businessId !=''" >
				and business_id = #{businessId}
			</if>
			<if test="testId != null and testId !=''" >
				and business_id like #{testId}"_%"
			</if>
			<if test="userId != null and userId !=''" >
				and business_id like "%_"#{userId}
			</if>
			<if test="type != null and type !=''" >
				and `type` = #{type}
			</if>
			<if test="status != null and status !=''" >
				and `status` = #{status}
			</if>
		</where>
		order by create_time desc
		<if test="offset != null and offset >=0 and rows != null and rows > 0">
			limit #{offset}, #{rows}
		</if>
	</select>

	<select id="count" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(1)
		from business_order
		<where>
			<if test="orderIds != null and orderIds.size() > 0" >
				and order_id in
				<foreach collection="orderIds" item="orderId" open="(" separator="," close=")">
					#{orderId}
				</foreach>
			</if>
			<if test="businessId != null and businessId !=''" >
				and business_id = #{businessId}
			</if>
			<if test="testId != null and testId !=''" >
				and business_id like #{testId}"_%"
			</if>
			<if test="userId != null and userId !=''" >
				and business_id like "%_"#{userId}
			</if>
			<if test="type != null and type !=''" >
				and `type` = #{type}
			</if>
			<if test="status != null and status !=''" >
				and `status` = #{status}
			</if>
		</where>
	</select>

	<select id="queryRetryOrder" parameterType="java.util.HashMap" resultType="com.enableets.edu.pakage.framework.ppr.test.po.BusinessOrderPO">
		select
		order_id as orderId,
		business_id as businessId,
		origin_data as originData,
		extend_attrs as extendAttrs,
		`status`
		from business_order
		where `status` = -1 and version = 0
		<if test="type != null and type !=''" >
			and type = #{type}
		</if>
		<![CDATA[
			and retry_times < #{retryTimes}
		 ]]>
	</select>

	<select id="queryInterruptOrder" parameterType="java.util.HashMap" resultType="com.enableets.edu.pakage.framework.ppr.test.po.BusinessOrderPO">
		select
		order_id as orderId,
		business_id as businessId,
		origin_data as originData,
		extend_attrs as extendAttrs,
		`status`
		from business_order
		where `status` = 2 and version = 0
		<if test="type != null and type !=''" >
			and type = #{type}
		</if>
	</select>

	<select id="get" parameterType="java.lang.String" resultType="com.enableets.edu.pakage.framework.ppr.test.po.BusinessOrderPO">
		select
			order_id as orderId,
			business_id as businessId,
			`type`,
			origin_data as originData,
			extend_attrs as extendAttrs,
			`status`,
			retry_times as retryTimes,
			error_code as errorCode,
			error_message as errorMessage,
			`creator`,
			create_time as createTime,
			`updator`,
			update_time as updateTime
		from business_order
		where business_id = #{businessId} and `type` = #{type} and version = 0
		order by version desc limit 1
	</select>

	<insert id="batchInsert" parameterType="java.util.List">
		insert into business_order(
			order_id, business_id, `type`, origin_data, extend_attrs, `status`, retry_times,
			`creator`, create_time, `updator`, update_time)
		values
		<foreach collection="list" item="item" separator=",">
			(
			#{item.orderId}, #{item.businessId}, #{item.type}, #{item.originData}, #{item.extendAttrs}, #{item.status}, #{item.retryTimes},
			#{item.creator}, #{item.createTime}, #{item.updator}, #{item.updateTime}
			)
		</foreach>
	</insert>

    <select id="getOrderIds" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT order_id
          from  business_order
        <where>
            <if test="businessIds != null">
                and business_id in
                <foreach collection="businessIds" item="businessId" separator="," open="(" close=")">
                    #{businessId}
                </foreach>
            </if>
            <if test="businessId != null and businessId != ''">
                and business_id = #{businessId}
            </if>
            <if test="type != null and type != ''">
                and `type` = #{type}
            </if>
            <if test="status != null and status != ''">
                and `status` = #{status}
            </if>
        </where>
    </select>

	<update id="invalid" parameterType="java.lang.String">
		update business_order
		set update_time = now(),status = -2
		where business_id = #{businessId}
		<if test="type != null and type != ''">
			and `type` = #{type}
		</if>
		<if test="status != null and status != ''">
			and `status` = #{status}
		</if>
	</update>

	<update id="batchInvalid" parameterType="java.lang.String">
		update business_order
		set update_time = now(),version = -1
		where business_id in
		<foreach collection="businessIds" item="businessId" separator="," open="(" close=")">
			#{businessId}
		</foreach>
		<if test="type != null and type != ''">
			and `type` = #{type}
		</if>
		<if test="status != null and status != ''">
			and `status` = #{status}
		</if>
	</update>

    <update id="batchInvalidByOrderIds" parameterType="java.lang.String">
        update business_order
        set update_time = now(), version = -1
        where order_id in
        <foreach collection="orderIds" item="orderId" separator="," open="(" close=")">
            #{orderId}
        </foreach>
    </update>

	<update id="start" parameterType="java.lang.String">
		update business_order
		set update_time = now(),status = 2,error_code = '', error_message = ''
		<if test="extendAttrs != null and extendAttrs !=''" >
			,extend_attrs = #{extendAttrs}
		</if>
		where order_id = #{orderId}
	</update>

	<update id="fail" parameterType="java.lang.String">
		update business_order
		set update_time = now(),status = -1, retry_times = retry_times + 1
		<if test="errorCode != null and errorCode !=''" >
			,error_code = #{errorCode}
		</if>
		<if test="errorMessage != null and errorMessage !=''" >
			,error_message = #{errorMessage}
		</if>
		where order_id = #{orderId}
	</update>

	<update id="success" parameterType="java.lang.String">
		update business_order
		set update_time = now(), status = 1, error_code = '', error_message = '', retry_times = retry_times + 1
		<if test="extendAttrs != null and extendAttrs !=''" >
			,extend_attrs = #{extendAttrs}
		</if>
		where order_id = #{orderId}
	</update>

	<select id="getOneBusinessOrder" resultType="com.enableets.edu.pakage.framework.ppr.test.po.BusinessOrderPO">
		select
			order_id as orderId,
			business_id as businessId,
			`type`,
			origin_data as originData,
			extend_attrs as extendAttrs,
			`status`,
			retry_times as retryTimes,
			error_code as errorCode,
			error_message as errorMessage,
			`creator`,
			create_time as createTime,
			`updator`,
			update_time as updateTime
		from
			business_order
			where status = 0
			and type = 'ERROR_QUESTION'
			limit 1
	</select>


</mapper>
